{"version":3,"file":"static/js/653.5259d5db.chunk.js","mappings":"oOACA,GAAiB,E,kBCkDjB,EA/Ce,WACb,IAAAA,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA0CL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEhCG,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMC,EAAAA,EAAAA,IACrB,4CACA,CACEC,OAAQ,CACNC,QAAS,mCACTC,MAAOlB,KAGX,KAAD,EARKW,EAAQC,EAAAO,KAUdd,EAAiBM,EAASS,KAAKC,SAAST,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAExCW,QAAQC,MAAM,0BAAyBZ,EAAAU,IAAS,yBAAAV,EAAAa,OAAA,GAAAf,EAAA,kBAEnD,kBAhBiB,OAAAH,EAAAmB,MAAA,KAAAC,UAAA,KAkBlB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,OAAcC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,YAAY,uBACZC,MAAOnC,EACPoC,SAAU,SAAAC,GAAC,OAAIpC,EAAeoC,EAAEC,OAAOH,MAAM,KAE/CH,EAAAA,EAAAA,KAAA,UAAQO,QAASjC,EAAayB,SAAC,YAC/BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAAA,UAAiBC,SAC7B3B,EAAcoC,KAAI,SAAAC,GAAK,OACtBb,EAAAA,EAAAA,MAAA,MAAmBC,UAAWC,EAAAA,UAAiBC,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,OACEU,IAAG,kCAAAC,OAAoCF,EAAMG,aAC7CC,IAAKJ,EAAMK,SAEbd,EAAAA,EAAAA,KAAA,KAAAD,SAAIU,EAAMK,UALHL,EAAMM,GAMV,QAKf,C","sources":["components/Movies/Movies.module.css","components/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState } from 'react';\nimport styles from './Movies.module.css';\nimport axios from 'axios';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get(\n        'https://api.themoviedb.org/3/search/movie',\n        {\n          params: {\n            api_key: 'beda84c819c00c5674b5621b8ea274af',\n            query: searchQuery,\n          },\n        }\n      );\n\n      setSearchResults(response.data.results);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n    }\n  };\n\n  return (\n    <div className={styles.movies}>\n      <h2>Search Movies</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Search for movies...\"\n        value={searchQuery}\n        onChange={e => setSearchQuery(e.target.value)}\n      />\n      <button onClick={handleSearch}>Search</button>\n      <ul className={styles.movieList}>\n        {searchResults.map(movie => (\n          <li key={movie.id} className={styles.movieItem}>\n            <img\n              src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <p>{movie.title}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useState3","_useState4","searchResults","setSearchResults","handleSearch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","params","api_key","query","sent","data","results","t0","console","error","stop","apply","arguments","_jsxs","className","styles","children","_jsx","type","placeholder","value","onChange","e","target","onClick","map","movie","src","concat","poster_path","alt","title","id"],"sourceRoot":""}