{"version":3,"file":"static/js/186.1d1b4be7.chunk.js","mappings":"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","sources":["api.js","components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const apiKey = 'beda84c819c00c5674b5621b8ea274af';\nconst baseUrl = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `${baseUrl}/trending/movie/day?api_key=${apiKey}`\n    );\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to fetch trending movies. Status: ${response.status}`\n      );\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error.message);\n    throw error;\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await fetch(\n      `${baseUrl}/search/movie?api_key=${apiKey}&query=${query}`\n    );\n\n    if (!response.ok) {\n      throw new Error(`Failed to search movies. Status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error searching movies:', error.message);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await fetch(\n      `${baseUrl}/movie/${movieId}?api_key=${apiKey}`\n    );\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to fetch movie details. Status: ${response.status}`\n      );\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error.message);\n    throw error;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await fetch(\n      `${baseUrl}/movie/${movieId}/credits?api_key=${apiKey}`\n    );\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to fetch movie credits. Status: ${response.status}`\n      );\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error.message);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await fetch(\n      `${baseUrl}/movie/${movieId}/reviews?api_key=${apiKey}`\n    );\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to fetch movie reviews. Status: ${response.status}`\n      );\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error.message);\n    throw error;\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as api from '../../api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const reviewsData = await api.getMovieReviews(movieId);\n        setReviews(reviewsData.results);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <p>Author: {review.author}</p>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["apiKey","baseUrl","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","concat","sent","ok","Error","status","json","abrupt","t0","console","error","message","stop","apply","arguments","getMovieDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieReviews","_ref5","_callee5","_context5","_x4","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","fetchReviews","reviewsData","api","results","_jsxs","children","_jsx","map","review","author","content","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}