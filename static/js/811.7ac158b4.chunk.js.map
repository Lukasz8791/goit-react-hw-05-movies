{"version":3,"file":"static/js/811.7ac158b4.chunk.js","mappings":"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","sources":["api.js","components/Cast/Cast.jsx","components/MovieDetails/MoviesDetails.jsx","components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const apiKey = 'beda84c819c00c5674b5621b8ea274af';\nconst baseUrl = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `${baseUrl}/trending/movie/day?api_key=${apiKey}`\n    );\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to fetch trending movies. Status: ${response.status}`\n      );\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error.message);\n    throw error;\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await fetch(\n      `${baseUrl}/search/movie?api_key=${apiKey}&query=${query}`\n    );\n\n    if (!response.ok) {\n      throw new Error(`Failed to search movies. Status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error searching movies:', error.message);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await fetch(\n      `${baseUrl}/movie/${movieId}?api_key=${apiKey}`\n    );\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to fetch movie details. Status: ${response.status}`\n      );\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error.message);\n    throw error;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await fetch(\n      `${baseUrl}/movie/${movieId}/credits?api_key=${apiKey}`\n    );\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to fetch movie credits. Status: ${response.status}`\n      );\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error.message);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await fetch(\n      `${baseUrl}/movie/${movieId}/reviews?api_key=${apiKey}`\n    );\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to fetch movie reviews. Status: ${response.status}`\n      );\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error.message);\n    throw error;\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const apiKey = 'beda84c819c00c5674b5621b8ea274af';\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`\n        );\n        if (!response.ok) {\n          throw new Error('Failed to fetch cast');\n        }\n        const data = await response.json();\n        setCast(data.cast);\n      } catch (error) {\n        console.error('Error fetching cast:', error.message);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>{actor.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import React, { useState, useEffect } from 'react';\nimport { Link, Route, Routes, useNavigate } from 'react-router-dom';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\nimport * as api from '../../api';\n\nconst MoviesDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const movieId = window.location.pathname.split('/').pop();\n        const details = await api.getMovieDetails(movieId);\n        setMovie(details);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n        navigate('/error');\n      }\n    };\n\n    fetchMovieDetails();\n  }, [navigate]);\n\n  if (!movie) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <div>\n      <h1>{movie.title}</h1>\n      <img\n        src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n        alt={movie.title}\n      />\n      <p>{movie.overview}</p>\n      <nav>\n        <Link to=\"cast\">Cast</Link>\n        <Link to=\"reviews\">Reviews</Link>\n      </nav>\n\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as api from '../../api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const reviewsData = await api.getMovieReviews(movieId);\n        setReviews(reviewsData.results);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <p>Author: {review.author}</p>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["apiKey","baseUrl","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","concat","sent","ok","Error","status","json","abrupt","t0","console","error","message","stop","apply","arguments","getMovieDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieReviews","_ref5","_callee5","_context5","_x4","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCast","_jsxs","children","_jsx","map","actor","name","id","movie","setMovie","navigate","useNavigate","fetchMovieDetails","details","window","location","pathname","split","pop","api","title","src","poster_path","alt","overview","Link","to","Routes","Route","path","element","Cast","Reviews","reviews","setReviews","fetchReviews","reviewsData","results","review","author","content","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}